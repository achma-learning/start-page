<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Search Bar</title>
    <link rel="icon" type="image/gif" href="https://raw.githubusercontent.com/achma-learning/start-page/main/images/search.gif">
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .search-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
            padding: 10px;
        }
        .search-bar {
            display: flex;
            gap: 10px;
            width: 100%;
            justify-content: center;
        }
        #searchInput {
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 300px;
            box-sizing: border-box;
        }
        .radio-group {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }
        .category-section {
            display: flex;
            flex-direction: column;
            margin-bottom: 10px;
        }
        .category-title {
            font-weight: bold;
            color: #000;
            margin-bottom: 5px;
        }
        .category-section .radio-group {
            margin-top: 5px;
        }
        .radio-group label {
            white-space: nowrap;
            cursor: pointer;
        }
        .radio-group label:hover {
            background: #f0f0f0;
        }
        button {
            padding: 8px 16px;
            font-size: 14px;
            border: none;
            background: #4285f4;
            color: white;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background: #3267d6;
        }
        #wikiButton {
            background: #cb6d51;
        }
        #wikiButton:hover {
            background: #a55842;
        }
        #searchSource {
            font-size: 12px;
            color: #333;
            margin-top: 5px;
        }
        #wikiContent {
            display: none;
            margin-top: 10px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background: #fff;
            max-width: 100%;
            font-size: 12px;
            color: #333;
        }
        #wikiContent .category-container {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 20px;
            padding: 0;
            margin: 0;
        }
        .category-section {
            display: flex;
            flex-direction: column;
        }
        .category-title {
            font-weight: bold;
            color: #000000;
            font-style: italic;
            text-decoration: underline;
            margin-bottom: 10px;
        }
        .category-section ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .category-section li {
            margin-bottom: 8px;
            cursor: pointer;
            padding: 5px;
            border-radius: 4px;
            transition: background 0.2s ease;
        }
        .category-section li:hover {
            background: #f0f0f0;
        }
        .category-section li.selected {
            background: #e0f0ff;
            font-weight: bold;
        }
        .category-section li strong {
            color: #004aad;
        }
        .checkbox-container {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 12px;
            color: #333;
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
</head>
<body>
    <div class="search-container">
        <div class="category-section">
            <div class="category-title">Group1: General Search</div>
            <div class="radio-group">
                <label><input type="radio" name="searchEngine" value="g:" checked>Google</label>
                <label><input type="radio" name="searchEngine" value="yt:">YouTube</label>
                <label><input type="radio" name="searchEngine" value="brave:">Brave Search</label>
                <label><input type="radio" name="searchEngine" value="ddg:">DuckDuckGo</label>
                <label><input type="radio" name="searchEngine" value="yadx:">Yandex</label>
                <label><input type="radio" name="searchEngine" value="bing:">Bing</label>
                <label><input type="radio" name="searchEngine" value="g100:">Google 100 results</label>
                <label><input type="radio" name="searchEngine" value="g+:">Google Advanced</label>
            </div>
        </div>
        <div class="category-section">
            <div class="category-title">Group2: Academic/Thesis Search</div>
            <div class="radio-group">
                <label><input type="radio" name="searchEngine" value="these-fr:">Theses.fr</label>
                <label><input type="radio" name="searchEngine" value="these2.0:">These2.0</label>
                <label><input type="radio" name="searchEngine" value="these-ma:">Toubkal</label>
                <label><input type="radio" name="searchEngine" value="these-ma-gs:">Toubkal - Google Search</label>
                <label><input type="radio" name="searchEngine" value="cismef-th:">CISMeF Theses</label>
                <label><input type="radio" name="searchEngine" value="gs:">Google Scholar</label>
                <label><input type="radio" name="searchEngine" value="rgt:">ResearchGate</label>
                <label><input type="radio" name="searchEngine" value="ndltd:">Networked Digital Library of Theses and Dissertations</label>
            </div>
        </div>
        <div class="category-section">
            <div class="category-title">Group3: Medical/Health Search</div>
            <div class="radio-group">
                <label><input type="radio" name="searchEngine" value="pbmd:">PubMed</label>
                <label><input type="radio" name="searchEngine" value="cismef:">CISMeF</label>
                <label><input type="radio" name="searchEngine" value="cismef-edn:">CISMeF EDN</label>
                <label><input type="radio" name="searchEngine" value="cismef-bp:">CISMeF Best Practices</label>
                <label><input type="radio" name="searchEngine" value="cismef-edu:">CISMeF Education</label>
                <label><input type="radio" name="searchEngine" value="lissa:">LISSA</label>
                <label><input type="radio" name="searchEngine" value="hetop:">HETOP</label>
                <label><input type="radio" name="searchEngine" value="has:">Haute Autorité de Santé</label>
                <label><input type="radio" name="searchEngine" value="openmd:">OpenMD</label>
            </div>
        </div>
        <div class="category-section">
            <div class="category-title">Group4: AI/Advanced Search</div>
            <div class="radio-group">
                <label><input type="radio" name="searchEngine" value="wolfram:">Wolfram Alpha</label>
                <label><input type="radio" name="searchEngine" value="gpt:">ChatGPT</label>
                <label><input type="radio" name="searchEngine" value="x.ai:">Grok</label>
                <label><input type="radio" name="searchEngine" value="g.ai:">Gemini</label>
                <label><input type="radio" name="searchEngine" value="p.ai:">Perplexity</label>
            </div>
        </div>
        <div class="category-section">
            <div class="category-title">Group5: American or European Societies</div>
            <div class="radio-group">
                <label><input type="radio" name="searchEngine" value="ama:">American Medical Association</label>
                <label><input type="radio" name="searchEngine" value="ema:">European Medicines Agency</label>
                <label><input type="radio" name="searchEngine" value="acp:">American College of Physicians</label>
                <label><input type="radio" name="searchEngine" value="rcp:">Royal College of Physicians</label>
            </div>
        </div>
        <div class="search-bar">
            <form id="searchForm">
                <input type="text" id="searchInput" placeholder="Research means that you don’t know, but are willing to learn the good" autocomplete="off" autofocus list="searchSuggestions">
                <datalist id="searchSuggestions">
                    <!-- Suggestions will be populated dynamically -->
                </datalist>
                <button type="submit">Rechercher</button>
            </form>
        </div>
        <div id="searchSource">Enter a query to see the search source</div>
        <button id="wikiButton">Wiki</button>
        <div class="checkbox-container">
            <input type="checkbox" id="keepWikiOpenCheckbox">
            <label for="keepWikiOpenCheckbox">Keep wiki open</label>
        </div>
        <div id="wikiContent"></div>
    </div>
    <script>
        const searchInput = document.getElementById('searchInput');
        const searchForm = document.getElementById('searchForm');
        const searchSource = document.getElementById('searchSource');
        const suggestions = document.getElementById('searchSuggestions');
        const radioButtons = document.querySelectorAll('input[name="searchEngine"]');
        const wikiButton = document.getElementById('wikiButton');
        const wikiContent = document.getElementById('wikiContent');
        const keepWikiOpenCheckbox = document.getElementById('keepWikiOpenCheckbox');

        // Define search engines with categories
        const internationale_search = {
            general: {
                'g:': { name: 'Google', url: 'https://www.google.com/search?q=' },
                'yt:': { name: 'YouTube', url: 'https://www.youtube.com/results?search_query=' },
                'brave:': { name: 'Brave Search', url: 'https://search.brave.com/search?q=' },
                'ddg:': { name: 'DuckDuckGo', url: 'https://duckduckgo.com/?q=' },
                'yadx:': { name: 'Yandex', url: 'https://yandex.com/search/?text=' },
                'bing:': { name: 'Bing', url: 'https://www.bing.com/search?q=' },
                'g100:': { name: 'Google 100 results', url: 'https://www.google.com/search?q=' },
                'g+:': { name: 'Google Advanced', url: 'https://www.google.com/advanced_search?q=' }
            },
            academic: {
                'these-fr:': { name: 'Theses.fr', url: 'https://theses.fr/?q=' },
                'these2.0:': { name: 'These2.0', url: 'https://thesefmpm.vercel.app/search?page=1&search=' },
                'these-ma:': { name: 'Toubkal', url: 'https://toubkal.imist.ma/?query=' },
                'these-ma-gs:': { name: 'Toubkal Google Search', url: 'https://www.google.com/search?q=site:toubkal.imist.ma+' },
                'cismef-th:': { name: 'CISMeF Theses', url: 'https://doccismef.chu-rouen.fr/dc/#env=thm&q=' },
                'gs:': { name: 'Google Scholar', url: 'https://scholar.google.com/scholar?q=' },
                'rgt:': { name: 'ResearchGate', url: 'https://www.researchgate.net/search/publication?q=' },
                'ndltd:': { name: 'Networked Digital Library of Theses and Dissertations', url: 'http://search.ndltd.org/search.php?q=' }
            },
            medical: {
                'pbmd:': { name: 'PubMed', url: 'https://pubmed.ncbi.nlm.nih.gov/?term=' },
                'cismef:': { name: 'CISMeF', url: 'https://doccismef.chu-rouen.fr/dc/#q=' },
                'cismef-edn:': { name: 'CISMeF EDN', url: 'https://doccismef.chu-rouen.fr/dc/#env=ecn&q=' },
                'cismef-bp:': { name: 'CISMeF Best Practices', url: 'https://doccismef.chu-rouen.fr/dc/#env=bp&q=' },
                'cismef-edu:': { name: 'CISMeF Education', url: 'https://doccismef.chu-rouen.fr/dc/#env=unf3s&q=' },
                'lissa:': { name: 'LISSA', url: 'https://www.lissa.fr/dc/#env=lissa&q=' },
                'hetop:': { name: 'HETOP', url: 'https://www.hetop.eu/hetop/fr/#q=' },
                'has:': { name: 'Haute Autorité de Santé', url: 'https://www.has-sante.fr/jcms/fc_2875171/fr/resultat-de-recherche?text=' },
                'openmd:': { name: 'OpenMD', url: 'https://openmd.com/search?q=' }
            },
            ai: {
                'wolfram:': { name: 'Wolfram Alpha', url: 'https://www.wolframalpha.com/input?i=' },
                'gpt:': { name: 'ChatGPT', url: 'https://chat.openai.com/?q=' },
                'x.ai:': { name: 'Grok', url: 'https://www.x.ai/grok?q=' },
                'g.ai:': { name: 'Gemini', url: 'https://gemini.google.com/?q=' },
                'p.ai:': { name: 'Perplexity', url: 'https://www.perplexity.ai/search?q=' }
            },
            societies: {
                'ama:': { name: 'American Medical Association', url: 'https://www.ama-assn.org/search?q=' },
                'ema:': { name: 'European Medicines Agency', url: 'https://www.ema.europa.eu/en/search/all?search_api_views_fulltext=' },
                'acp:': { name: 'American College of Physicians', url: 'https://www.acponline.org/search?search_api_fulltext=' },
                'rcp:': { name: 'Royal College of Physicians', url: 'https://www.rcplondon.ac.uk/search?search_api_fulltext=' }
            }
        };

        // Update search source display and sync radio selection
        function updateSearchSource() {
            const query = searchInput.value.trim();
            let source = 'Unknown source';
            let matchedPrefix = '';

            // Check for typed prefix and sync radio
            for (const category in internationale_search) {
                for (const prefix in internationale_search[category]) {
                    if (query.startsWith(prefix)) {
                        source = internationale_search[category][prefix].name;
                        matchedPrefix = prefix;
                        const radio = document.querySelector(`input[name="searchEngine"][value="${prefix}"]`);
                        if (radio) radio.checked = true;
                        break;
                    }
                }
                if (matchedPrefix) break;
            }

            // If no prefix is typed, use the selected radio button
            if (!matchedPrefix && query === '') {
                const selectedEngine = document.querySelector('input[name="searchEngine"]:checked').value;
                for (const category in internationale_search) {
                    if (internationale_search[category][selectedEngine]) {
                        source = internationale_search[category][selectedEngine].name;
                        matchedPrefix = selectedEngine;
                        break;
                    }
                }
            }

            searchSource.textContent = `Search source: ${source}`;
            searchSource.style.color = source === 'Unknown source' ? '#333' : 'green';
            return { prefix: matchedPrefix, query: query.slice(matchedPrefix.length) };
        }

        // Handle autocomplete suggestions
        function updateSuggestions() {
            const query = searchInput.value.trim().toLowerCase();
            suggestions.innerHTML = '';
            if (query) {
                for (const category in internationale_search) {
                    for (const prefix in internationale_search[category]) {
                        if (prefix.toLowerCase().startsWith(query)) {
                            const option = document.createElement('option');
                            option.value = prefix;
                            suggestions.appendChild(option);
                        }
                    }
                }
            }
        }

        // Handle search
        function performSearch(e) {
            e.preventDefault();
            const selectedEngine = document.querySelector('input[name="searchEngine"]:checked').value;
            const { prefix, query } = updateSearchSource();
            
            let searchUrl;
            if (query && prefix) {
                for (const category in internationale_search) {
                    if (prefix in internationale_search[category]) {
                        searchUrl = internationale_search[category][prefix].url + encodeURIComponent(query);
                        if (prefix === 'g100:') {
                            searchUrl += '&num=100';
                        }
                        break;
                    }
                }
            } else if (query && !prefix) {
                searchUrl = internationale_search[Object.keys(internationale_search).find(category => internationale_search[category][selectedEngine])][selectedEngine].url + encodeURIComponent(query);
            }
            if (searchUrl) {
                window.open(searchUrl, '_blank');
            }
        }

        // Populate and toggle wiki content
        function toggleWiki() {
            if (wikiContent.style.display === 'block') {
                wikiContent.style.display = 'none';
            } else {
                let content = `
                    <div class="category-container">
                        <div class="category-section">
                            <div class="category-title">Group1: General Search</div>
                            <ul>
                                <li><strong> g:</strong> - Google</li>
                                <li><strong> yt:</strong> - YouTube</li>
                                <li><strong> brave:</strong> - Brave Search</li>
                                <li><strong> ddg:</strong> - DuckDuckGo</li>
                                <li><strong> yadx:</strong> - Yandex</li>
                                <li><strong> bing:</strong> - Bing</li>
                                <li><strong> g100:</strong> - Google 100 results</li>
                                <li><strong> g+:</strong> - Google Advanced</li>
                            </ul>
                        </div>
                        <div class="category-section">
                            <div class="category-title">Group2: Academic/Thesis Search</div>
                            <ul>
                                <li><strong> these-fr:</strong> - Theses.fr</li>
                                <li><strong> these2.0:</strong> - These2.0</li>
                                <li><strong> these-ma:</strong> - Toubkal</li>
                                <li><strong> these-ma-gs:</strong> - Toubkal Google Search</li>
                                <li><strong> cismef-th:</strong> - CISMeF Theses</li>
                                <li><strong> gs:</strong> - Google Scholar</li>
                                <li><strong> rgt:</strong> - ResearchGate</li>
                                <li><strong> ndltd:</strong> - Networked Digital Library of Theses and Dissertations</li>
                            </ul>
                        </div>
                        <div class="category-section">
                            <div class="category-title">Group3: Medical/Health Search</div>
                            <ul>
                                <li><strong> pbmd:</strong> - PubMed</li>
                                <li><strong> cismef:</strong> - CISMeF</li>
                                <li><strong> cismef-edn:</strong> - CISMeF EDN</li>
                                <li><strong> cismef-bp:</strong> - CISMeF Best Practices</li>
                                <li><strong> cismef-edu:</strong> - CISMeF Education</li>
                                <li><strong> lissa:</strong> - LISSA</li>
                                <li><strong> hetop:</strong> - HETOP</li>
                                <li><strong> has:</strong> - Haute Autorité de Santé</li>
                                <li><strong> openmd:</strong> - OpenMD</li>
                            </ul>
                        </div>
                        <div class="category-section">
                            <div class="category-title">Group4: AI/Advanced Search</div>
                            <ul>
                                <li><strong> wolfram:</strong> - Wolfram Alpha</li>
                                <li><strong> gpt:</strong> - ChatGPT</li>
                                <li><strong> x.ai:</strong> - Grok</li>
                                <li><strong> g.ai:</strong> - Gemini</li>
                                <li><strong> p.ai:</strong> - Perplexity</li>
                            </ul>
                        </div>
                        <div class="category-section">
                            <div class="category-title">Group5: American or European Societies</div>
                            <ul>
                                <li><strong> ama:</strong> - American Medical Association</li>
                                <li><strong> ema:</strong> - European Medicines Agency</li>
                                <li><strong> acp:</strong> - American College of Physicians</li>
                                <li><strong> rcp:</strong> - Royal College of Physicians</li>
                            </ul>
                        </div>
                    </div>
                `;
                wikiContent.innerHTML = content;
                wikiContent.style.display = 'block';

                // Add click event listeners to list items for selection
                const wikiItems = wikiContent.querySelectorAll('li');
                wikiItems.forEach(item => {
                    item.addEventListener('click', () => {
                        const prefix = item.querySelector('strong').textContent.trim();
                        searchInput.value = prefix;
                        updateSearchSource(); // Syncs radio selection
                        wikiContent.querySelectorAll('li').forEach(li => li.classList.remove('selected'));
                        item.classList.add('selected');
                        searchInput.focus();
                        if (!keepWikiOpenCheckbox.checked) {
                            wikiContent.style.display = 'none';
                        }
                    });
                });
            }
        }

        // Event listeners
        searchInput.addEventListener('input', updateSearchSource);
        searchInput.addEventListener('input', updateSuggestions);
        searchForm.addEventListener('submit', performSearch);
        radioButtons.forEach(radio => {
            radio.addEventListener('change', updateSearchSource);
        });
        wikiButton.addEventListener('click', toggleWiki);

        // Set focus and initial source on page load
        searchInput.focus();
        updateSearchSource();
    </script>
</body>
</html>